swagger: '2.0'

##
## FastScore Engine X API
##

info:
  title: FastScore Engine X API
  version: '1.3'

paths:
  /1/swagger:
    get:
      operationId: swagger_get
      produces:
        - application/json
      responses:
        200:
          description: Returns the present API specification

  /1/health:
    get:
      operationId: health_get
      produces:
        - application/json
      responses:
        200:
          description: Indicates that the service is healthy
          schema:
            $ref: ./types.yaml#/HealthInfo

  /1/stream/sample:
    post:
      operationId: stream_sample
      produces:
        - application/json
      parameters:
        - name: stream
          description: The stream descriptor to get sample data from
          in: body
          schema:
            type: string
          required: true
        - name: 'n'
          description: The number of data items to read from the stream
          type: integer
          in: query
      responses:
        200:
          description: Sample data successfully read
          schema:
            type: array
            items:
              type: string
        400: { description: The stream descriptor is invalid }

  /1/stream/rate:
    post:
      operationId: stream_rate
      produces:
        - application/json
      parameters:
        - name: stream
          description: The stream descriptor to measure data rate
          in: body
          schema:
            type: string
          required: true
      responses:
        200:
          description: The data rates measured successfully
          schema:
            type: array
            items:
              type: object
              required:
                - rps
                - mbps
              properties:
                rps:
                  description: Records per second
                  type: number
                mbps:
                  description: Megabytes per second
                  type: number
        400: { description: Stream descriptor invalid or stream too short }

  /1/job/model:
    put:
      operationId: model_set
      consumes:
        - application/vnd.fastscore.model-pfa+json
        - application/vnd.fastscore.model-pfa-json
        - application/vnd.fastscore.model-pfa-yaml
        - application/vnd.fastscore.model-pfa-pretty
        - application/vnd.fastscore.model-python
        - application/vnd.fastscore.model-python2
        - application/vnd.fastscore.model-python3
        - application/vnd.fastscore.model-r
        - application/vnd.fastscore.model-c
        - application/vnd.fastscore.model-java
        - application/vnd.fastscore.model-scala
        - application/vnd.fastscore.model-erlang
        ## A model with attachments
        - multipart/mixed
        - multipart/form-data
        ## OBSOLETE - DO NOT USE
        - application/vnd.pfa+json
        - application/json
        - application/vnd.ppfa
        - application/x-yaml
        - application/x-r
        - application/x-python
        - application/x-python2
        - application/x-python3
##
## The body of the request may contain the source code of the model or a model
## and its attachments. An attachment can be inline or be externalized.
## See https://opendatagoup.atlassian.net/wiki/display/FAS/Working+with+large+attachments
##
      responses:
        204: { description: The model successfully added to the engine }
        400: { description: See the error message - a lot can go wrong }

  /1/job/stream/in:
    put:
      operationId: input_stream_set
      consumes:
        - application/json
      parameters:
        - name: stream
          description: The input stream descriptor
          schema:
            type: string
          in: body
          required: true
      responses:
        204: { description: The input stream set successfully }
        400: { description: Invalid stream descriptor }

  /1/job/stream/out:
    put:
      operationId: output_stream_set
      consumes:
        - application/json
      parameters:
        - name: stream
          description: The output stream descriptor
          schema:
            type: string
          in: body
          required: true
      responses:
        204: { description: The output stream set successfully }
        400: { description: Invalid stream descriptor }

  /1/job:
    delete:
      operationId: job_delete
      responses:
        204: { description: The engine stopped }

  /1/job/scale:
    post:
      operationId: job_scale
      parameters:
        - name: 'n'
          description: The number of jets to scale model to
          type: integer
          in: query
      responses:
        204: { description: The model scaled successfully }
        403: { description: Invalid parameter }

  /1/job/status:
    get:
      operationId: job_status
      produces:
        - application/json
      parameters:
        - name: return
          description: A comma-separated list of field names (input, output, model, jets)
          type: string
          in: query
      responses:
        200:
          description: Returns the engine status information
          schema: { $ref: ./types.yaml#/StatusInfo }

  /1/job/statistics:
    delete:
      responses:
        204: { description: Statistics counters reset successfully }

  /1/job/sample/cpu:
    post:
      operationId: job_sample_cpu
      produces:
        - application/json
      parameters:
        - name: duration
          description: The number of seconds to sample CPU usage for
          type: integer
          in: query
      responses:
        200:
          description: CPU usage data collected successfully
          schema: { $ref: ./types.yaml#/CpuUsageInfo }
        403: { description: Invalid parameter }

  /1/job/input:
    post:
      operationId: job_input
      responses:
        200: { description: The batch processed successfully }
        400: { description: Non-pigging transport or timeout }

  /1/debug/output:
    get:
      operationId: scoop_debug_output
      produces:
        - application/json
      responses:
        200:
          description: Retrieves the output of the output debug transport
          schema:
            type: array
            items:
              type: string

