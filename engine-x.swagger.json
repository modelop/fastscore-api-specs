
  "swagger": "2.0",
  "info": {
    "title": "Engine X API",
    "description": "The Engine X microservice API",
    "version": "v1.0"
  },
  "basePath": "/1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/vnd.pfa+json",
    "application/json",
    "application/vnd.ppfa",
    "application/x-yaml",
    "application/x-python",
    "application/x-r",
    "multipart/mixed"
  ],
  "produces": [
    "text/plain",
    "application/json"
  ],
  "paths": {
    "/swagger": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "returns the present API specifiction"
          }
        }
      }
    },
    "/health": {
      "get": {
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "object",
              "properties": {
                "id": "string"
              }
            }
          }
        }
      }
    },
    "/stream/sample": {
      "post": {
        "parameters": [
          {
            "name": "stream",
            "in": "body",
            "description": "a stream descriptor to get data sample from",
            "schema": { "$ref": "stream-descriptor.json" },
            "required": true
          },
          {
            "name": "n",
            "in": "query",
            "description": "a number of data items to get from the stream",
            "type": "integer",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "a sample data from the stream",
            "schema": { "type": "array" }
          },
          "400": {
            "description": "the stream descriptor is invalid"
          }
        }
      }
    },
    "/job/model": {
      "put": {
        "consumes": [
          "application/vnd.pfa+json",
          "application/json",
          "application/vnd.ppfa",
          "application/x-yaml",
          "application/x-python",
          "application/x-r",
          "multipart-mixed"
        ],
        "parameters": [
          {
            "name": "model",
            "in": "body",
            "description": "a model (PFA, R, or Python) with or without attachments",
            "schema": { "type": "string" },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "model set successfully"
          }
        }
      }
    },
    "/job/stream/in": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "stream",
            "in": "body",
            "description": "a stream descriptor",
            "schema": { "$ref": "stream-descriptor.json" },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "input stream descriptor set successfully"
          }
        }
      }
    },
    "/job/stream/out": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "stream",
            "in": "body",
            "description": "a stream descriptor",
            "schema": { "$ref": "stream-descriptor.json" },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "output stream descriptor set successfully"
          }
        }
      }
    },
    "/job": {
      "delete": {
        "responses": {
          "204": {
            "description": "model stopped successfully"
          }
        }
      }
    },
    "/job/scale": {
      "post": {
        "parameters": [
          {
            "name": "n",
            "in": "query",
            "description": "the new number of instances for the model",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "model scaled successfully"
          },
          "400": {
            "description": "erroneous parameters"
          }
        }
      }
    },
    "/job/status": {
      "get": {
        "parameters": [
          {
            "name": "return",
            "in": "query",
            "description": "a comma-separated list of field names to return (input, output, model, jets)",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "engine status info",
            "schema": { "$ref": "#/definitions/status" }
          }
        }
      }
    },
    "/job/statistics": {
      "delete": {
        "responses": {
          "204": {
            "description": "performance counters reset"
          }
        }
      }
    },
    "/job/output": {
      "get": {
        "responses": {
          "200": {
            "description": "buffered outputs of the running model",
            "schema": {
              "type": "array",
              "items": { "type": "string" }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "status": {
      "type": "object",
      "properties": {
        "input": {
          "type": "object",
          "properties": {
            "descriptor": { "$ref": "stream-descriptor.json" },
            "total_records": { "type": "integer" },
            "total_bytes": { "type": "integer" },
            "eof": { "type": "boolean" }
          }
        },
        "output": {
          "type": "object",
          "properties": {
            "descriptor": { "$ref": "stream-descriptor.json" },
            "total_records": { "type": "integer" },
            "total_bytes": { "type": "integer" }
          }
        },
        "model": {
          "type": "object",
          "properties": {
            "type": { "type": "string" },
            "source": { "type": "string" },
            "attachments": {
              "type": "array",
              "items": { "type": "string" }
            }
          }
        },
        "jets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "pid": { "type": "integer" },
              "sandbox": { "type": "string" },
              "total_consumed": { "type": "integer" },
              "total_produced": { "type": "integer" },
              "run_time": { "type": "integer" },
              "memoory": { "type": "integer" },
              "busy": { "type": "boolean" }
            }
          }
        }
      }
    }
  }
}
