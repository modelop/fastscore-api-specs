{
  "swagger": "2.0",
  "info": {
    "title": "Model Manage API",
    "description": "The Model Manage microservice API",
    "version": "v1.0"
  },
  "basePath": "/1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/vnd.pfa+json",
    "application/json",
    "application/vnd.ppfa",
    "application/x-yaml",
    "application/x-python",
    "application/x-r",
    "application/zip",
    "application/gzip"
  ],
  "produces": [
    "application/vnd.pfa+json",
    "application/vnd.ppfa",
    "application/x-python",
    "application/x-r",
    "application/json"
  ],
  "paths": {
    "/swagger": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "returns the present API specifiction"
          }
        }
      }
    },
    "/health": {
      "get": {
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "object",
              "properties": {
                "id": "string"
              }
            }
          }
        }
      }
    },
    "/model": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "returns a list of model names (or JSON objects if 'i' is set)"
          }
        },
        "parameters": [
          {
            "name": "return",
            "in": "query",
            "type": "string",
            "description": "a comma-separated list of fields (metadata, type, attachments)"
          }
        ]
      }
    },
    "/model/{model}": {
      "parameters": [
        {
          "name": "model",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "the name of the model"
        }
      ],
      "get": {
        "produces": [
          "application/vnd.pfa+json",
          "application/json",
          "application/vnd.ppfa",
          "application/x-yaml",
          "application/x-python",
          "application/x-r"
        ],
        "responses": {
          "200": {
            "description": "retrieves a model"
          }
        },
        "parameters": [
          {
            "name": "metadata_only",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "set to 1 to retrieve only the model metadata"
          }
        ]
      },
      "put": {
        "consumes": [
          "application/vnd.pfa+json",
          "application/json",
          "application/vnd.ppfa",
          "application/x-yaml",
          "application/x-python",
          "application/x-r"
        ],
        "responses": {
          "201": {
            "description": "model added successfully"
          }
        }
      },
      "delete": {
        "responses": {
          "204": {
            "description": "model deleted successfully"
          }
        }
      }
    },
    "/model/{model}/attachment": {
      "parameters": [
        {
          "name": "model",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "the name of the model"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "returns a list of attachment for the model"
          }
        }
      }
    },
    "/model/{model}/attachment/{attachment}": {
      "parameters": [
        {
          "name": "model",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "the name of the model"
        },
        {
          "name": "attachment",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "the name of the attachment"
        }
      ],
      "get": {
        "produces": [
          "application/zip",
          "application/gzip"
        ],
        "responses": {
          "200": {
            "description": "retrieves an attachment"
          }
        }
      },
      "put": {
        "consumes": [
          "application/zip",
          "application/gzip"
        ],
        "responses": {
          "201": { "description": "attachment added successfully" },
          "204": { "description": "attachment updated successfully" }
        }
      },
      "delete": {
        "responses": {
          "204": {
            "description": "attachment deleted successfully"
          }
        }
      }
    },
    "/stream": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "retrieves a the list of stream descriptors"
          }
        }
      }
    },
    "/stream/{stream}": {
      "parameters": [
        {
          "name": "stream",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "the stream ID"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "retrieves a stream descriptor"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "stream added successfully",
            "schema": { "$ref": "stream-descriptor.json" }
          }
        }
      },
      "delete": {
        "responses": {
          "204": {
            "description": "stream deleted successfully"
          }
        }
      }
    }
  }
}
